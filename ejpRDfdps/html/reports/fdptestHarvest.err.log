Traceback (most recent call last):
  File "/Users/andra/Library/Python/3.9/lib/python/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/andra/Library/Python/3.9/lib/python/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/andra/Library/Python/3.9/lib/python/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/andra/Library/Python/3.9/lib/python/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/andra/Library/Python/3.9/lib/python/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/andra/Library/Python/3.9/lib/python/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

url = 'https://fdps.ejprd.semlab-leiden.nl/'
headers = {'accept': 'application/json'}

response = requests.get(url, headers=headers)
data = response.json()

df = pd.DataFrame(data)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[2], line 7[0m
[1;32m      4[0m response [38;5;241m=[39m requests[38;5;241m.[39mget(url, headers[38;5;241m=[39mheaders)
[1;32m      5[0m data [38;5;241m=[39m response[38;5;241m.[39mjson()
[0;32m----> 7[0m df [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mDataFrame[49m[43m([49m[43mdata[49m[43m)[49m

File [0;32m~/Library/Python/3.9/lib/python/site-packages/pandas/core/frame.py:709[0m, in [0;36mDataFrame.__init__[0;34m(self, data, index, columns, dtype, copy)[0m
[1;32m    703[0m     mgr [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_init_mgr(
[1;32m    704[0m         data, axes[38;5;241m=[39m{[38;5;124m"[39m[38;5;124mindex[39m[38;5;124m"[39m: index, [38;5;124m"[39m[38;5;124mcolumns[39m[38;5;124m"[39m: columns}, dtype[38;5;241m=[39mdtype, copy[38;5;241m=[39mcopy
[1;32m    705[0m     )
[1;32m    707[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, [38;5;28mdict[39m):
[1;32m    708[0m     [38;5;66;03m# GH#38939 de facto copy defaults to False only in non-dict cases[39;00m
[0;32m--> 709[0m     mgr [38;5;241m=[39m [43mdict_to_mgr[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[43mcolumns[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mcopy[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m,[49m[43m [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mmanager[49m[43m)[49m
[1;32m    710[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, ma[38;5;241m.[39mMaskedArray):
[1;32m    711[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mnumpy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mma[39;00m [38;5;28;01mimport[39;00m mrecords

File [0;32m~/Library/Python/3.9/lib/python/site-packages/pandas/core/internals/construction.py:481[0m, in [0;36mdict_to_mgr[0;34m(data, index, columns, dtype, typ, copy)[0m
[1;32m    477[0m     [38;5;28;01melse[39;00m:
[1;32m    478[0m         [38;5;66;03m# dtype check to exclude e.g. range objects, scalars[39;00m
[1;32m    479[0m         arrays [38;5;241m=[39m [x[38;5;241m.[39mcopy() [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(x, [38;5;124m"[39m[38;5;124mdtype[39m[38;5;124m"[39m) [38;5;28;01melse[39;00m x [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m arrays]
[0;32m--> 481[0m [38;5;28;01mreturn[39;00m [43marrays_to_mgr[49m[43m([49m[43marrays[49m[43m,[49m[43m [49m[43mcolumns[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mtyp[49m[43m,[49m[43m [49m[43mconsolidate[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m)[49m

File [0;32m~/Library/Python/3.9/lib/python/site-packages/pandas/core/internals/construction.py:115[0m, in [0;36marrays_to_mgr[0;34m(arrays, columns, index, dtype, verify_integrity, typ, consolidate)[0m
[1;32m    112[0m [38;5;28;01mif[39;00m verify_integrity:
[1;32m    113[0m     [38;5;66;03m# figure out the index, if necessary[39;00m
[1;32m    114[0m     [38;5;28;01mif[39;00m index [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 115[0m         index [38;5;241m=[39m [43m_extract_index[49m[43m([49m[43marrays[49m[43m)[49m
[1;32m    116[0m     [38;5;28;01melse[39;00m:
[1;32m    117[0m         index [38;5;241m=[39m ensure_index(index)

File [0;32m~/Library/Python/3.9/lib/python/site-packages/pandas/core/internals/construction.py:645[0m, in [0;36m_extract_index[0;34m(data)[0m
[1;32m    642[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mPer-column arrays must each be 1-dimensional[39m[38;5;124m"[39m)
[1;32m    644[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m indexes [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m raw_lengths:
[0;32m--> 645[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mIf using all scalar values, you must pass an index[39m[38;5;124m"[39m)
[1;32m    647[0m [38;5;28;01mif[39;00m have_series:
[1;32m    648[0m     index [38;5;241m=[39m union_indexes(indexes)

[0;31mValueError[0m: If using all scalar values, you must pass an index

